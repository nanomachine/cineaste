{
  "name": "transmitter",
  "version": "1.0.2",
  "description": "> Dead simple pub-sub",
  "main": "dist/transmitter.js",
  "scripts": {
    "build": "babel src --out-dir dist",
    "coverage": "istanbul cover node_modules/mocha/bin/_mocha -- -u exports -R tap --require ./test/babel test/*-test.js",
    "prepublish": "npm run build",
    "test": "npm run tests-node",
    "tests-node": "mocha -u exports -R nyan --require ./test/babel test/*-test.js"
  },
  "keywords": [
    "transmit",
    "pubsub",
    "pub",
    "sub",
    "eventemitter",
    "observable",
    "subscribe"
  ],
  "author": {
    "name": "Josh Perez",
    "email": "josh@goatslacker.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/goatslacker/transmitter.git"
  },
  "license": "MIT",
  "devDependencies": {
    "babel": "5.4.3",
    "chai": "2.3.0",
    "coveralls": "2.11.2",
    "istanbul": "0.3.14",
    "mocha": "2.2.5",
    "sinon": "1.14.1"
  },
  "readme": "# transmitter\n\n> Dead simple pub-sub\n\nIt's 22 LOC of just subscribe and push.\n\n## API\n\n### subscribe(onChange: function): { dispose: (): void }\n\nSubscribes to change events. Returns an object which contains the method `dispose` which removes the current subscription.\n\n### push(payload: any): void\n\nEmit a change to all the subscribers.\n\n## Example\n\n```js\nconst bus = transmitter()\n\nbus.subscribe(result => console.log(result))\n\nbus.push({ foo: 'bar' })\n```\n\n## License\n\n[MIT](http://josh.mit-license.org)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/goatslacker/transmitter/issues"
  },
  "_id": "transmitter@1.0.2",
  "dist": {
    "shasum": "8b023203c5a10e33741c969c616e2050c064f311"
  },
  "_from": "transmitter@1.0.2",
  "_resolved": "https://registry.npmjs.org/transmitter/-/transmitter-1.0.2.tgz"
}
